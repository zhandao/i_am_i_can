class <%= role_c %> < ActiveRecord::Base
  has_and_belongs_to_many :related_users,
                          join_table: '<%= subj_role_tb %>', foreign_key: :<%= name_u %>_id, class_name: '<%= name_c %>', association_foreign_key: :<%= role_u %>_id
<% unless @ii_opts[:without_group] %>
  has_and_belongs_to_many :related_stored_groups,
                          join_table: '<%= group_role_tb %>', foreign_key: :<%= group_u %>_id, class_name: '<%= group_c %>', association_foreign_key: :<%= role_u %>_id
<% end %>
  has_and_belongs_to_many :permissions,
                          join_table: '<%= role_pms_tb %>', foreign_key: :<%= permission_u %>_id, class_name: '<%= permission_c %>', association_foreign_key: :<%= role_u %>_id

  has_many_temporary_permissions

  acts_as_role

  # default_scope { with_stored_permissions }
end

__END__

  string  :name, null: false
  string  :desc

  index :name, unique: true
